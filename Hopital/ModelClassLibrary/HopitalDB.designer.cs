#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ModelClassLibrary
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HospitalDB")]
	public partial class HopitalDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertChirurgie(Chirurgie instance);
    partial void UpdateChirurgie(Chirurgie instance);
    partial void DeleteChirurgie(Chirurgie instance);
    partial void InsertTypeConsultation(TypeConsultation instance);
    partial void UpdateTypeConsultation(TypeConsultation instance);
    partial void DeleteTypeConsultation(TypeConsultation instance);
    partial void InsertConsultation(Consultation instance);
    partial void UpdateConsultation(Consultation instance);
    partial void DeleteConsultation(Consultation instance);
    partial void InsertExamensBiologiques(ExamensBiologiques instance);
    partial void UpdateExamensBiologiques(ExamensBiologiques instance);
    partial void DeleteExamensBiologiques(ExamensBiologiques instance);
    partial void InsertExamensRadiologiques(ExamensRadiologiques instance);
    partial void UpdateExamensRadiologiques(ExamensRadiologiques instance);
    partial void DeleteExamensRadiologiques(ExamensRadiologiques instance);
    partial void InsertFacture(Facture instance);
    partial void UpdateFacture(Facture instance);
    partial void DeleteFacture(Facture instance);
    partial void InsertHospitalisation(Hospitalisation instance);
    partial void UpdateHospitalisation(Hospitalisation instance);
    partial void DeleteHospitalisation(Hospitalisation instance);
    partial void InsertMedecin(Medecin instance);
    partial void UpdateMedecin(Medecin instance);
    partial void DeleteMedecin(Medecin instance);
    partial void InsertPatient(Patient instance);
    partial void UpdatePatient(Patient instance);
    partial void DeletePatient(Patient instance);
    partial void InsertPrescription(Prescription instance);
    partial void UpdatePrescription(Prescription instance);
    partial void DeletePrescription(Prescription instance);
    partial void InsertRDV(RDV instance);
    partial void UpdateRDV(RDV instance);
    partial void DeleteRDV(RDV instance);
    partial void InsertService(Service instance);
    partial void UpdateService(Service instance);
    partial void DeleteService(Service instance);
    partial void InsertSpec(Spec instance);
    partial void UpdateSpec(Spec instance);
    partial void DeleteSpec(Spec instance);
    partial void InsertTraitement(Traitement instance);
    partial void UpdateTraitement(Traitement instance);
    partial void DeleteTraitement(Traitement instance);
    #endregion
		
		public HopitalDBDataContext() : 
				base(global::ModelClassLibrary.Properties.Settings.Default.HospitalDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public HopitalDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HopitalDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HopitalDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HopitalDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Chirurgie> Chirurgie
		{
			get
			{
				return this.GetTable<Chirurgie>();
			}
		}
		
		public System.Data.Linq.Table<TypeConsultation> TypeConsultation
		{
			get
			{
				return this.GetTable<TypeConsultation>();
			}
		}
		
		public System.Data.Linq.Table<Consultation> Consultation
		{
			get
			{
				return this.GetTable<Consultation>();
			}
		}
		
		public System.Data.Linq.Table<ExamensBiologiques> ExamensBiologiques
		{
			get
			{
				return this.GetTable<ExamensBiologiques>();
			}
		}
		
		public System.Data.Linq.Table<ExamensRadiologiques> ExamensRadiologiques
		{
			get
			{
				return this.GetTable<ExamensRadiologiques>();
			}
		}
		
		public System.Data.Linq.Table<Facture> Facture
		{
			get
			{
				return this.GetTable<Facture>();
			}
		}
		
		public System.Data.Linq.Table<Hospitalisation> Hospitalisation
		{
			get
			{
				return this.GetTable<Hospitalisation>();
			}
		}
		
		public System.Data.Linq.Table<Medecin> Medecin
		{
			get
			{
				return this.GetTable<Medecin>();
			}
		}
		
		public System.Data.Linq.Table<Patient> Patient
		{
			get
			{
				return this.GetTable<Patient>();
			}
		}
		
		public System.Data.Linq.Table<Prescription> Prescription
		{
			get
			{
				return this.GetTable<Prescription>();
			}
		}
		
		public System.Data.Linq.Table<RDV> RDV
		{
			get
			{
				return this.GetTable<RDV>();
			}
		}
		
		public System.Data.Linq.Table<Service> Service
		{
			get
			{
				return this.GetTable<Service>();
			}
		}
		
		public System.Data.Linq.Table<Spec> Spec
		{
			get
			{
				return this.GetTable<Spec>();
			}
		}
		
		public System.Data.Linq.Table<Traitement> Traitement
		{
			get
			{
				return this.GetTable<Traitement>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Chirurgie")]
	public partial class Chirurgie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Chirurgien;
		
		private string _Anesthesiste;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnChirurgienChanging(string value);
    partial void OnChirurgienChanged();
    partial void OnAnesthesisteChanging(string value);
    partial void OnAnesthesisteChanged();
    #endregion
		
		public Chirurgie()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chirurgien", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Chirurgien
		{
			get
			{
				return this._Chirurgien;
			}
			set
			{
				if ((this._Chirurgien != value))
				{
					this.OnChirurgienChanging(value);
					this.SendPropertyChanging();
					this._Chirurgien = value;
					this.SendPropertyChanged("Chirurgien");
					this.OnChirurgienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anesthesiste", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Anesthesiste
		{
			get
			{
				return this._Anesthesiste;
			}
			set
			{
				if ((this._Anesthesiste != value))
				{
					this.OnAnesthesisteChanging(value);
					this.SendPropertyChanging();
					this._Anesthesiste = value;
					this.SendPropertyChanged("Anesthesiste");
					this.OnAnesthesisteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TypeConsultation")]
	public partial class TypeConsultation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Type;
		
		private int _Prix;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnPrixChanging(int value);
    partial void OnPrixChanged();
    #endregion
		
		public TypeConsultation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prix", DbType="Int NOT NULL")]
		public int Prix
		{
			get
			{
				return this._Prix;
			}
			set
			{
				if ((this._Prix != value))
				{
					this.OnPrixChanging(value);
					this.SendPropertyChanging();
					this._Prix = value;
					this.SendPropertyChanged("Prix");
					this.OnPrixChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Consultation")]
	public partial class Consultation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _Date;
		
		private string _Synthese;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnSyntheseChanging(string value);
    partial void OnSyntheseChanged();
    #endregion
		
		public Consultation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Synthese", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Synthese
		{
			get
			{
				return this._Synthese;
			}
			set
			{
				if ((this._Synthese != value))
				{
					this.OnSyntheseChanging(value);
					this.SendPropertyChanging();
					this._Synthese = value;
					this.SendPropertyChanged("Synthese");
					this.OnSyntheseChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExamensBiologiques")]
	public partial class ExamensBiologiques : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Desigantion;
		
		private int _Resultat;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDesigantionChanging(string value);
    partial void OnDesigantionChanged();
    partial void OnResultatChanging(int value);
    partial void OnResultatChanged();
    #endregion
		
		public ExamensBiologiques()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desigantion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Desigantion
		{
			get
			{
				return this._Desigantion;
			}
			set
			{
				if ((this._Desigantion != value))
				{
					this.OnDesigantionChanging(value);
					this.SendPropertyChanging();
					this._Desigantion = value;
					this.SendPropertyChanged("Desigantion");
					this.OnDesigantionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resultat", DbType="Int NOT NULL")]
		public int Resultat
		{
			get
			{
				return this._Resultat;
			}
			set
			{
				if ((this._Resultat != value))
				{
					this.OnResultatChanging(value);
					this.SendPropertyChanging();
					this._Resultat = value;
					this.SendPropertyChanged("Resultat");
					this.OnResultatChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExamensRadiologiques")]
	public partial class ExamensRadiologiques : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Designation;
		
		private int _Resultat;
		
		private string _Image;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDesignationChanging(string value);
    partial void OnDesignationChanged();
    partial void OnResultatChanging(int value);
    partial void OnResultatChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    #endregion
		
		public ExamensRadiologiques()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Designation", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Designation
		{
			get
			{
				return this._Designation;
			}
			set
			{
				if ((this._Designation != value))
				{
					this.OnDesignationChanging(value);
					this.SendPropertyChanging();
					this._Designation = value;
					this.SendPropertyChanged("Designation");
					this.OnDesignationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resultat", DbType="Int NOT NULL")]
		public int Resultat
		{
			get
			{
				return this._Resultat;
			}
			set
			{
				if ((this._Resultat != value))
				{
					this.OnResultatChanging(value);
					this.SendPropertyChanging();
					this._Resultat = value;
					this.SendPropertyChanged("Resultat");
					this.OnResultatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(MAX)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Facture")]
	public partial class Facture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _DateFacture;
		
		private int _Total;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateFactureChanging(System.DateTime value);
    partial void OnDateFactureChanged();
    partial void OnTotalChanging(int value);
    partial void OnTotalChanged();
    #endregion
		
		public Facture()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFacture", DbType="DateTime NOT NULL")]
		public System.DateTime DateFacture
		{
			get
			{
				return this._DateFacture;
			}
			set
			{
				if ((this._DateFacture != value))
				{
					this.OnDateFactureChanging(value);
					this.SendPropertyChanging();
					this._DateFacture = value;
					this.SendPropertyChanged("DateFacture");
					this.OnDateFactureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Int NOT NULL")]
		public int Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hospitalisation")]
	public partial class Hospitalisation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdAdmission;
		
		private System.DateTime _DateAdmission;
		
		private string _TypeAdmission;
		
		private string _MotifAdmission;
		
		private string _MedecinTraitant;
		
		private string _NomAccompagant;
		
		private string _PrenomAccompagnant;
		
		private string _LienParente;
		
		private System.Nullable<System.DateTime> _DateEntreeAcc;
		
		private System.Nullable<System.DateTime> _DateSortieAcc;
		
		private System.Nullable<System.DateTime> _DateSortie;
		
		private string _MotifSortie;
		
		private string _ResultatSortie;
		
		private System.Nullable<System.DateTime> _DateDeces;
		
		private string _MotifDeces;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdAdmissionChanging(int value);
    partial void OnIdAdmissionChanged();
    partial void OnDateAdmissionChanging(System.DateTime value);
    partial void OnDateAdmissionChanged();
    partial void OnTypeAdmissionChanging(string value);
    partial void OnTypeAdmissionChanged();
    partial void OnMotifAdmissionChanging(string value);
    partial void OnMotifAdmissionChanged();
    partial void OnMedecinTraitantChanging(string value);
    partial void OnMedecinTraitantChanged();
    partial void OnNomAccompagantChanging(string value);
    partial void OnNomAccompagantChanged();
    partial void OnPrenomAccompagnantChanging(string value);
    partial void OnPrenomAccompagnantChanged();
    partial void OnLienParenteChanging(string value);
    partial void OnLienParenteChanged();
    partial void OnDateEntreeAccChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEntreeAccChanged();
    partial void OnDateSortieAccChanging(System.Nullable<System.DateTime> value);
    partial void OnDateSortieAccChanged();
    partial void OnDateSortieChanging(System.Nullable<System.DateTime> value);
    partial void OnDateSortieChanged();
    partial void OnMotifSortieChanging(string value);
    partial void OnMotifSortieChanged();
    partial void OnResultatSortieChanging(string value);
    partial void OnResultatSortieChanged();
    partial void OnDateDecesChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDecesChanged();
    partial void OnMotifDecesChanging(string value);
    partial void OnMotifDecesChanged();
    #endregion
		
		public Hospitalisation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAdmission", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdAdmission
		{
			get
			{
				return this._IdAdmission;
			}
			set
			{
				if ((this._IdAdmission != value))
				{
					this.OnIdAdmissionChanging(value);
					this.SendPropertyChanging();
					this._IdAdmission = value;
					this.SendPropertyChanged("IdAdmission");
					this.OnIdAdmissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdmission", DbType="DateTime NOT NULL")]
		public System.DateTime DateAdmission
		{
			get
			{
				return this._DateAdmission;
			}
			set
			{
				if ((this._DateAdmission != value))
				{
					this.OnDateAdmissionChanging(value);
					this.SendPropertyChanging();
					this._DateAdmission = value;
					this.SendPropertyChanged("DateAdmission");
					this.OnDateAdmissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeAdmission", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TypeAdmission
		{
			get
			{
				return this._TypeAdmission;
			}
			set
			{
				if ((this._TypeAdmission != value))
				{
					this.OnTypeAdmissionChanging(value);
					this.SendPropertyChanging();
					this._TypeAdmission = value;
					this.SendPropertyChanged("TypeAdmission");
					this.OnTypeAdmissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotifAdmission", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MotifAdmission
		{
			get
			{
				return this._MotifAdmission;
			}
			set
			{
				if ((this._MotifAdmission != value))
				{
					this.OnMotifAdmissionChanging(value);
					this.SendPropertyChanging();
					this._MotifAdmission = value;
					this.SendPropertyChanged("MotifAdmission");
					this.OnMotifAdmissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedecinTraitant", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MedecinTraitant
		{
			get
			{
				return this._MedecinTraitant;
			}
			set
			{
				if ((this._MedecinTraitant != value))
				{
					this.OnMedecinTraitantChanging(value);
					this.SendPropertyChanging();
					this._MedecinTraitant = value;
					this.SendPropertyChanged("MedecinTraitant");
					this.OnMedecinTraitantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomAccompagant", DbType="VarChar(50)")]
		public string NomAccompagant
		{
			get
			{
				return this._NomAccompagant;
			}
			set
			{
				if ((this._NomAccompagant != value))
				{
					this.OnNomAccompagantChanging(value);
					this.SendPropertyChanging();
					this._NomAccompagant = value;
					this.SendPropertyChanged("NomAccompagant");
					this.OnNomAccompagantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrenomAccompagnant", DbType="VarChar(50)")]
		public string PrenomAccompagnant
		{
			get
			{
				return this._PrenomAccompagnant;
			}
			set
			{
				if ((this._PrenomAccompagnant != value))
				{
					this.OnPrenomAccompagnantChanging(value);
					this.SendPropertyChanging();
					this._PrenomAccompagnant = value;
					this.SendPropertyChanged("PrenomAccompagnant");
					this.OnPrenomAccompagnantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LienParente", DbType="VarChar(50)")]
		public string LienParente
		{
			get
			{
				return this._LienParente;
			}
			set
			{
				if ((this._LienParente != value))
				{
					this.OnLienParenteChanging(value);
					this.SendPropertyChanging();
					this._LienParente = value;
					this.SendPropertyChanged("LienParente");
					this.OnLienParenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEntreeAcc", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEntreeAcc
		{
			get
			{
				return this._DateEntreeAcc;
			}
			set
			{
				if ((this._DateEntreeAcc != value))
				{
					this.OnDateEntreeAccChanging(value);
					this.SendPropertyChanging();
					this._DateEntreeAcc = value;
					this.SendPropertyChanged("DateEntreeAcc");
					this.OnDateEntreeAccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSortieAcc", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateSortieAcc
		{
			get
			{
				return this._DateSortieAcc;
			}
			set
			{
				if ((this._DateSortieAcc != value))
				{
					this.OnDateSortieAccChanging(value);
					this.SendPropertyChanging();
					this._DateSortieAcc = value;
					this.SendPropertyChanged("DateSortieAcc");
					this.OnDateSortieAccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSortie", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateSortie
		{
			get
			{
				return this._DateSortie;
			}
			set
			{
				if ((this._DateSortie != value))
				{
					this.OnDateSortieChanging(value);
					this.SendPropertyChanging();
					this._DateSortie = value;
					this.SendPropertyChanged("DateSortie");
					this.OnDateSortieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotifSortie", DbType="VarChar(50)")]
		public string MotifSortie
		{
			get
			{
				return this._MotifSortie;
			}
			set
			{
				if ((this._MotifSortie != value))
				{
					this.OnMotifSortieChanging(value);
					this.SendPropertyChanging();
					this._MotifSortie = value;
					this.SendPropertyChanged("MotifSortie");
					this.OnMotifSortieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultatSortie", DbType="VarChar(50)")]
		public string ResultatSortie
		{
			get
			{
				return this._ResultatSortie;
			}
			set
			{
				if ((this._ResultatSortie != value))
				{
					this.OnResultatSortieChanging(value);
					this.SendPropertyChanging();
					this._ResultatSortie = value;
					this.SendPropertyChanged("ResultatSortie");
					this.OnResultatSortieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeces", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeces
		{
			get
			{
				return this._DateDeces;
			}
			set
			{
				if ((this._DateDeces != value))
				{
					this.OnDateDecesChanging(value);
					this.SendPropertyChanging();
					this._DateDeces = value;
					this.SendPropertyChanged("DateDeces");
					this.OnDateDecesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotifDeces", DbType="VarChar(50)")]
		public string MotifDeces
		{
			get
			{
				return this._MotifDeces;
			}
			set
			{
				if ((this._MotifDeces != value))
				{
					this.OnMotifDecesChanging(value);
					this.SendPropertyChanging();
					this._MotifDeces = value;
					this.SendPropertyChanged("MotifDeces");
					this.OnMotifDecesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Medecin")]
	public partial class Medecin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nom;
		
		private string _Prenom;
		
		private string _Tel;
		
		private int _CodeSpecialite;
		
		private System.Nullable<int> _IdService;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnPrenomChanging(string value);
    partial void OnPrenomChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnCodeSpecialiteChanging(int value);
    partial void OnCodeSpecialiteChanged();
    partial void OnIdServiceChanging(System.Nullable<int> value);
    partial void OnIdServiceChanged();
    #endregion
		
		public Medecin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenom", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Prenom
		{
			get
			{
				return this._Prenom;
			}
			set
			{
				if ((this._Prenom != value))
				{
					this.OnPrenomChanging(value);
					this.SendPropertyChanging();
					this._Prenom = value;
					this.SendPropertyChanged("Prenom");
					this.OnPrenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeSpecialite", DbType="Int NOT NULL")]
		public int CodeSpecialite
		{
			get
			{
				return this._CodeSpecialite;
			}
			set
			{
				if ((this._CodeSpecialite != value))
				{
					this.OnCodeSpecialiteChanging(value);
					this.SendPropertyChanging();
					this._CodeSpecialite = value;
					this.SendPropertyChanged("CodeSpecialite");
					this.OnCodeSpecialiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdService", DbType="Int")]
		public System.Nullable<int> IdService
		{
			get
			{
				return this._IdService;
			}
			set
			{
				if ((this._IdService != value))
				{
					this.OnIdServiceChanging(value);
					this.SendPropertyChanging();
					this._IdService = value;
					this.SendPropertyChanged("IdService");
					this.OnIdServiceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Patient")]
	public partial class Patient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nom;
		
		private string _Prenom;
		
		private string _DateNaissance;
		
		private string _Sexe;
		
		private string _Adresse;
		
		private string _Situation;
		
		private string _Assurance;
		
		private string _CodeAssurance;
		
		private string _Tel;
		
		private string _NomPere;
		
		private string _NomMere;
		
		private string _NomPersPrevenir;
		
		private string _TelPersPrevenir;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnPrenomChanging(string value);
    partial void OnPrenomChanged();
    partial void OnDateNaissanceChanging(string value);
    partial void OnDateNaissanceChanged();
    partial void OnSexeChanging(string value);
    partial void OnSexeChanged();
    partial void OnAdresseChanging(string value);
    partial void OnAdresseChanged();
    partial void OnSituationChanging(string value);
    partial void OnSituationChanged();
    partial void OnAssuranceChanging(string value);
    partial void OnAssuranceChanged();
    partial void OnCodeAssuranceChanging(string value);
    partial void OnCodeAssuranceChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnNomPereChanging(string value);
    partial void OnNomPereChanged();
    partial void OnNomMereChanging(string value);
    partial void OnNomMereChanged();
    partial void OnNomPersPrevenirChanging(string value);
    partial void OnNomPersPrevenirChanged();
    partial void OnTelPersPrevenirChanging(string value);
    partial void OnTelPersPrevenirChanged();
    #endregion
		
		public Patient()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenom", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Prenom
		{
			get
			{
				return this._Prenom;
			}
			set
			{
				if ((this._Prenom != value))
				{
					this.OnPrenomChanging(value);
					this.SendPropertyChanging();
					this._Prenom = value;
					this.SendPropertyChanged("Prenom");
					this.OnPrenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateNaissance", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string DateNaissance
		{
			get
			{
				return this._DateNaissance;
			}
			set
			{
				if ((this._DateNaissance != value))
				{
					this.OnDateNaissanceChanging(value);
					this.SendPropertyChanging();
					this._DateNaissance = value;
					this.SendPropertyChanged("DateNaissance");
					this.OnDateNaissanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sexe", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Sexe
		{
			get
			{
				return this._Sexe;
			}
			set
			{
				if ((this._Sexe != value))
				{
					this.OnSexeChanging(value);
					this.SendPropertyChanging();
					this._Sexe = value;
					this.SendPropertyChanged("Sexe");
					this.OnSexeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresse", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Adresse
		{
			get
			{
				return this._Adresse;
			}
			set
			{
				if ((this._Adresse != value))
				{
					this.OnAdresseChanging(value);
					this.SendPropertyChanging();
					this._Adresse = value;
					this.SendPropertyChanged("Adresse");
					this.OnAdresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Situation", DbType="VarChar(10)")]
		public string Situation
		{
			get
			{
				return this._Situation;
			}
			set
			{
				if ((this._Situation != value))
				{
					this.OnSituationChanging(value);
					this.SendPropertyChanging();
					this._Situation = value;
					this.SendPropertyChanged("Situation");
					this.OnSituationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assurance", DbType="VarChar(50)")]
		public string Assurance
		{
			get
			{
				return this._Assurance;
			}
			set
			{
				if ((this._Assurance != value))
				{
					this.OnAssuranceChanging(value);
					this.SendPropertyChanging();
					this._Assurance = value;
					this.SendPropertyChanged("Assurance");
					this.OnAssuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeAssurance", DbType="VarChar(10)")]
		public string CodeAssurance
		{
			get
			{
				return this._CodeAssurance;
			}
			set
			{
				if ((this._CodeAssurance != value))
				{
					this.OnCodeAssuranceChanging(value);
					this.SendPropertyChanging();
					this._CodeAssurance = value;
					this.SendPropertyChanged("CodeAssurance");
					this.OnCodeAssuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomPere", DbType="VarChar(50)")]
		public string NomPere
		{
			get
			{
				return this._NomPere;
			}
			set
			{
				if ((this._NomPere != value))
				{
					this.OnNomPereChanging(value);
					this.SendPropertyChanging();
					this._NomPere = value;
					this.SendPropertyChanged("NomPere");
					this.OnNomPereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomMere", DbType="VarChar(50)")]
		public string NomMere
		{
			get
			{
				return this._NomMere;
			}
			set
			{
				if ((this._NomMere != value))
				{
					this.OnNomMereChanging(value);
					this.SendPropertyChanging();
					this._NomMere = value;
					this.SendPropertyChanged("NomMere");
					this.OnNomMereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomPersPrevenir", DbType="VarChar(50)")]
		public string NomPersPrevenir
		{
			get
			{
				return this._NomPersPrevenir;
			}
			set
			{
				if ((this._NomPersPrevenir != value))
				{
					this.OnNomPersPrevenirChanging(value);
					this.SendPropertyChanging();
					this._NomPersPrevenir = value;
					this.SendPropertyChanged("NomPersPrevenir");
					this.OnNomPersPrevenirChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelPersPrevenir", DbType="VarChar(10)")]
		public string TelPersPrevenir
		{
			get
			{
				return this._TelPersPrevenir;
			}
			set
			{
				if ((this._TelPersPrevenir != value))
				{
					this.OnTelPersPrevenirChanging(value);
					this.SendPropertyChanging();
					this._TelPersPrevenir = value;
					this.SendPropertyChanged("TelPersPrevenir");
					this.OnTelPersPrevenirChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prescription")]
	public partial class Prescription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _Date;
		
		private string _NomPatient;
		
		private string _PrenomPatient;
		
		private string _Note;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnNomPatientChanging(string value);
    partial void OnNomPatientChanged();
    partial void OnPrenomPatientChanging(string value);
    partial void OnPrenomPatientChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
		
		public Prescription()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomPatient", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NomPatient
		{
			get
			{
				return this._NomPatient;
			}
			set
			{
				if ((this._NomPatient != value))
				{
					this.OnNomPatientChanging(value);
					this.SendPropertyChanging();
					this._NomPatient = value;
					this.SendPropertyChanged("NomPatient");
					this.OnNomPatientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrenomPatient", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PrenomPatient
		{
			get
			{
				return this._PrenomPatient;
			}
			set
			{
				if ((this._PrenomPatient != value))
				{
					this.OnPrenomPatientChanging(value);
					this.SendPropertyChanging();
					this._PrenomPatient = value;
					this.SendPropertyChanged("PrenomPatient");
					this.OnPrenomPatientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="VarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RDV")]
	public partial class RDV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CodeRDV;
		
		private string _Medecin;
		
		private System.DateTime _DateRDV;
		
		private string _Service;
		
		private int _IdPatient;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeRDVChanging(string value);
    partial void OnCodeRDVChanged();
    partial void OnMedecinChanging(string value);
    partial void OnMedecinChanged();
    partial void OnDateRDVChanging(System.DateTime value);
    partial void OnDateRDVChanged();
    partial void OnServiceChanging(string value);
    partial void OnServiceChanged();
    partial void OnIdPatientChanging(int value);
    partial void OnIdPatientChanged();
    #endregion
		
		public RDV()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeRDV", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CodeRDV
		{
			get
			{
				return this._CodeRDV;
			}
			set
			{
				if ((this._CodeRDV != value))
				{
					this.OnCodeRDVChanging(value);
					this.SendPropertyChanging();
					this._CodeRDV = value;
					this.SendPropertyChanged("CodeRDV");
					this.OnCodeRDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Medecin", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Medecin
		{
			get
			{
				return this._Medecin;
			}
			set
			{
				if ((this._Medecin != value))
				{
					this.OnMedecinChanging(value);
					this.SendPropertyChanging();
					this._Medecin = value;
					this.SendPropertyChanged("Medecin");
					this.OnMedecinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateRDV", DbType="DateTime NOT NULL")]
		public System.DateTime DateRDV
		{
			get
			{
				return this._DateRDV;
			}
			set
			{
				if ((this._DateRDV != value))
				{
					this.OnDateRDVChanging(value);
					this.SendPropertyChanging();
					this._DateRDV = value;
					this.SendPropertyChanged("DateRDV");
					this.OnDateRDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Service", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Service
		{
			get
			{
				return this._Service;
			}
			set
			{
				if ((this._Service != value))
				{
					this.OnServiceChanging(value);
					this.SendPropertyChanging();
					this._Service = value;
					this.SendPropertyChanged("Service");
					this.OnServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPatient", DbType="Int NOT NULL")]
		public int IdPatient
		{
			get
			{
				return this._IdPatient;
			}
			set
			{
				if ((this._IdPatient != value))
				{
					this.OnIdPatientChanging(value);
					this.SendPropertyChanging();
					this._IdPatient = value;
					this.SendPropertyChanged("IdPatient");
					this.OnIdPatientChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Service")]
	public partial class Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nom;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    #endregion
		
		public Service()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Spec")]
	public partial class Spec : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Specialite;
		
		private int _CodeSpec;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSpecialiteChanging(string value);
    partial void OnSpecialiteChanged();
    partial void OnCodeSpecChanging(int value);
    partial void OnCodeSpecChanged();
    #endregion
		
		public Spec()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specialite", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Specialite
		{
			get
			{
				return this._Specialite;
			}
			set
			{
				if ((this._Specialite != value))
				{
					this.OnSpecialiteChanging(value);
					this.SendPropertyChanging();
					this._Specialite = value;
					this.SendPropertyChanged("Specialite");
					this.OnSpecialiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeSpec", DbType="Int NOT NULL")]
		public int CodeSpec
		{
			get
			{
				return this._CodeSpec;
			}
			set
			{
				if ((this._CodeSpec != value))
				{
					this.OnCodeSpecChanging(value);
					this.SendPropertyChanging();
					this._CodeSpec = value;
					this.SendPropertyChanged("CodeSpec");
					this.OnCodeSpecChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Traitement")]
	public partial class Traitement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _Date;
		
		private int _Prix;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnPrixChanging(int value);
    partial void OnPrixChanged();
    #endregion
		
		public Traitement()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prix", DbType="Int NOT NULL")]
		public int Prix
		{
			get
			{
				return this._Prix;
			}
			set
			{
				if ((this._Prix != value))
				{
					this.OnPrixChanging(value);
					this.SendPropertyChanging();
					this._Prix = value;
					this.SendPropertyChanged("Prix");
					this.OnPrixChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
